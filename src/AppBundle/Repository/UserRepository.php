<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    const MAX_RESULTS = 1;

    /** @param User $user */
    public function activateUser($user)
    {
        $user->setToken(null)->setActive(true);

        $this->_em->persist($user);
        $this->_em->flush();
    }

    /** @param User $user */
    public function resetPassword($user, $newPass)
    {
        $user->setPassword($newPass);
        $this->_em->persist($user);
        $this->_em->flush();
    }

    public function paginate($dql, $page = 1, $limit = UserRepository::MAX_RESULTS)
    {
        $paginator = new Paginator($dql);

        $paginator->getQuery()
            ->setFirstResult(($page - 1) * $limit)
            ->setMaxResults($limit);

        return $paginator;
    }

    public function findBest($by, $currentPage = 1, $limit)
    {
        if($by == 'percentage') {
            $query = $this->findByPercentage();
        }
        else{
            $query = $this->createQueryBuilder('u')
                ->select('u')
                ->orderBy('u.'.$by, 'DESC')
                ->getQuery();
        }

        $paginator = $this->paginate($query, $currentPage, $limit);

        return $paginator;
    }

    public function findByPercentage()
    {
        return $this->_em->createQuery('SELECT u, u.correct / (u.correct + u.incorrect) AS HIDDEN percentage
        FROM AppBundle:User u 
        ORDER BY percentage DESC');
    }

    public function userCount()
    {
        return $this->_em->createQuery('SELECT COUNT(u)
        FROM AppBundle:User u');
    }
}
